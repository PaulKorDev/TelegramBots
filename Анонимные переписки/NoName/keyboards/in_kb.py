from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database.sqlite_db import sql_return_name, sql_return_dict_mes

#Buttons
my_mess_but = InlineKeyboardButton(text=f"üì™ –ú–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="my_mess_callback")
find_user_but = InlineKeyboardButton(text="üîé –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏", callback_data="find_user_callback")
friend_list = InlineKeyboardButton(text="üë§ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="friend_list_callback")
notification_but = InlineKeyboardButton(text="üîî –í—ã–∫–ª/–í–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notification_callback")
change_name_but = InlineKeyboardButton(text="üé≠ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="set_name_callback")
change_descroption_but = InlineKeyboardButton(text="‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ —Å–µ–±–µ", callback_data="set_description_callback")
about_bot_but  = InlineKeyboardButton(text="ü§ñ –û –±–æ—Ç–µ", callback_data="about_bot_callback")

set_name_but = InlineKeyboardButton(text="–ü—Ä–∏–¥—É–º–∞—Ç—å –∏–º—è", callback_data="set_name_callback")
set_description_but = InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="set_description_callback")

back_but = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_callback")

tech_support_but = InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞", callback_data="5332747174_profile_callback")

write_but = InlineKeyboardButton(text="üí¨–ù–∞–ø–∏—Å–∞—Ç—åüí¨", callback_data="_write_callback")
friend_but = InlineKeyboardButton(text="‚ùáÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –±—ã—Å—Ç—Ä—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã ‚ùáÔ∏è", callback_data="_friend_callback")

#keyboard init
in_kb_menu = InlineKeyboardMarkup(row_width=1)
in_kb_set_name = InlineKeyboardMarkup(row_width=1)
in_kb_about_bot = InlineKeyboardMarkup(row_width=1)
in_kb_set_description = InlineKeyboardMarkup(row_width=1)
in_kb_person_found = InlineKeyboardMarkup(row_width=1)

#add buttons to keyboards
in_kb_menu.add(my_mess_but).add(find_user_but).add(friend_list).add(notification_but).add(change_name_but).add(change_descroption_but).add(about_bot_but)
in_kb_set_name.add(set_name_but)
in_kb_set_description.add(set_description_but)
in_kb_about_bot.add(tech_support_but).add(back_but)
in_kb_person_found.add(write_but).add(friend_but).add(back_but)


def create_in_kb_profile (id_other_user, add_friend_chek):
    write_but.callback_data = f"{id_other_user}_write_callback"
    if add_friend_chek:       
        friend_but.text = "‚ùáÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –±—ã—Å—Ç—Ä—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã ‚ùáÔ∏è"
        friend_but.callback_data = f"{id_other_user}_add_friend_callback"       
    else:
         
        friend_but.text = "‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ ‚ùå"
        friend_but.callback_data = f"{id_other_user}_delete_friend_callback"  
    return in_kb_person_found

async def create_in_kb_friendlist (friendlist, id_user):
        
    in_kb_friendlist = InlineKeyboardMarkup(row_width=1)
    dict_mes = await sql_return_dict_mes(id_user)
    if friendlist is None:
        in_kb_friendlist.add(InlineKeyboardButton(text=f"–í–∞—à —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç", callback_data="back_callback"))
    elif type(friendlist) is list:
        for id_friend in friendlist:
            in_kb_friendlist.add(InlineKeyboardButton(text=f"{await sql_return_name(id_friend)}", callback_data=f"{id_friend}_profile_callback"))
    elif type(friendlist) is str:
        in_kb_friendlist.add(InlineKeyboardButton(text=f"{await sql_return_name(friendlist)} ", callback_data=f"{friendlist}_profile_callback"))
    in_kb_friendlist.add(back_but)
    return in_kb_friendlist

async def create_in_kb_unread_mes (id_user):
    in_kb_unread_messages = InlineKeyboardMarkup(row_width=1)
    dict_mes = await sql_return_dict_mes(id_user)
    if (dict_mes is None) or (dict_mes == {}):
        in_kb_unread_messages.add(InlineKeyboardButton(text=f"–£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π", callback_data="back_callback"))
    else:
        for id_sender in dict_mes:
            in_kb_unread_messages.add(InlineKeyboardButton(text=f"{await sql_return_name(id_sender)} [{len(dict_mes[str(id_sender)])}]", callback_data=f"{id_sender}_write_callback"))
    in_kb_unread_messages.add(back_but)
    return in_kb_unread_messages


#Full string
#InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="", callback_data="_callback"))
